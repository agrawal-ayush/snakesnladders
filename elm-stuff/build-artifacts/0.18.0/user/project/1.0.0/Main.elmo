var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Update') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						seed: _elm_lang$core$Maybe$Just(_p0._0)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			var newModel = A2(
				_elm_lang$core$Maybe$withDefault,
				model,
				A2(
					_elm_lang$core$Maybe$map,
					function (_p1) {
						var _p2 = _p1;
						var _p3 = _p2._0;
						return _elm_lang$core$Native_Utils.update(
							model,
							{
								seed: _elm_lang$core$Maybe$Just(_p2._1),
								position: _p3 + model.position,
								desc: A2(
									_elm_lang$core$Basics_ops['++'],
									model.desc,
									A2(
										_elm_lang$core$Basics_ops['++'],
										' Dice Roll, Number: ',
										_elm_lang$core$Basics$toString(_p3)))
							});
					},
					A2(
						_elm_lang$core$Maybe$map,
						_elm_lang$core$Random$step(
							A2(_elm_lang$core$Random$int, 1, 6)),
						model.seed)));
			var board = _elm_lang$core$Dict$fromList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 99, _1: 54},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 70, _1: 55},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 52, _1: 42},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 25, _1: 2},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 95, _1: 72},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 6, _1: 26},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 11, _1: 40},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 60, _1: 41},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 46, _1: 90},
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				});
			var positionAfterSnakeLadderCheck = function () {
				if (_elm_lang$core$Native_Utils.cmp(newModel.position, 100) > -1) {
					return 100;
				} else {
					var _p4 = A2(_elm_lang$core$Dict$get, newModel.position, board);
					if (_p4.ctor === 'Just') {
						return _p4._0;
					} else {
						return newModel.position;
					}
				}
			}();
			var updatedDesc = A2(
				_elm_lang$core$Basics_ops['++'],
				newModel.desc,
				(!_elm_lang$core$Native_Utils.eq(positionAfterSnakeLadderCheck, newModel.position)) ? A2(
					_elm_lang$core$Basics_ops['++'],
					' Snake/Ladder Found at number: ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(newModel.position),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' Updating Position to: ',
							_elm_lang$core$Basics$toString(positionAfterSnakeLadderCheck)))) : ' Continue .. ');
			var checkIfWon = (_elm_lang$core$Native_Utils.cmp(positionAfterSnakeLadderCheck, 100) > -1) ? ' WON !!' : updatedDesc;
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					newModel,
					{position: positionAfterSnakeLadderCheck, desc: checkIfWon}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$randomNumberGenerator = A2(
	_elm_lang$core$Random$map,
	_elm_lang$core$Random$initialSeed,
	A2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt));
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {seed: a, position: b, desc: c};
	});
var _user$project$Main$PlayAgain = {ctor: 'PlayAgain'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$PlayAgain),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(' -- Play --'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(model.position)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.desc),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$Update = function (a) {
	return {ctor: 'Update', _0: a};
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: {seed: _elm_lang$core$Maybe$Nothing, position: 0, desc: ' .. '},
			_1: A2(_elm_lang$core$Random$generate, _user$project$Main$Update, _user$project$Main$randomNumberGenerator)
		},
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (model) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
